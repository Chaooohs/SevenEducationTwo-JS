//=========================================================================

// 1. Зробіть функцію, яка приймає параметром число від 1 до 7, а повертає день тижня українською мовою

//==========================================================================

let num = prompt("Ведiть число вiд 1 до 7:");

function day(dayWeek) {
  return document.write(`<h3> ${dayWeek} </h3>`);
}

switch (num) {
  case "1":
    day("Понеділок");
    break;
  case "2":
    day("Вівторок");
    break;
  case "3":
    day("Середа");
    break;
  case "4":
    day("Четвер");
    break;
  case "5":
    day("П'ятниця");
    break;
  case "6":
    day("Субота");
    break;
  case "7":
    day("Неділя");
    break;
  default:
    day("Невiрно");
}

document.write("<hr>");

//==========================================================================

// 2. Даний рядок типу 'var_text_hello'. Зробіть із нього текст 'VarTextHello'.

//==========================================================================

let text = "var_text_hello";
let newText = text.replace("var_text_hello", "VarTextHello");

document.write(`<h3>${newText}</h3>`);

document.write("<hr>");

//==========================================================================

// 3. Створіть функцію, яка заповнюватиме масив 10-ма іксами за допомогою циклу.

//==========================================================================

const x = [];

function arr(x) {
  for (let i = 0; i < 10; i++) {
    x.push("x");
  }
}
arr(x)
document.write(`<h3> ${x.join(' ')} </h3>`);

document.write("<hr>");

//==========================================================================

// 4. Створіть маасив на 50 елементів і заповніть кожен елемент його номером, не використовуючи цикли, виведіть кожен непарний елемент у параграфі, а парний у діві.

//==========================================================================

let array = new Array(50);
let i = array.length;

function fill() {
  if (i >= 0) {
    array[i] = i;
    return fill(array, --i);
  }
}
fill();

i = 0;
function pair() {
  i++;
  if (i > 50) {
    return;
  } else if (array[i] % 2 === 0) {
    document.write(`<div"> ${array[i]} </div>`);
  } else {
    document.write(`<p> ${array[i]} </p>`);
  }
  pair();
}
pair();

document.write("<hr>");

//=========================================================================

// 5. Якщо змінна a більше нуля - то в ggg запишемо функцію, яка виводить один!, інакше запишемо функцію, яка виводить два!

//=========================================================================

let asd = +prompt("Ведiть число:");
let ggg = asd;

if (asd > 0) {
  ggg = function () {
    document.write(`<h3> один </h3>`);
  };
} else {
  ggg = function () {
    document.write(`<h3> два </h3>`);
  };
}
ggg();

document.write("<hr>");

//=========================================================================

// 6. Використовуючи CallBack function, створіть калькулятор, який буде від користувача приймати 2 числа і знак арефметичної операції. При введенні не числа або при розподілі на 0 виводити помилку.

//=========================================================================

let a = parseInt(prompt('Калькулятор -' + "Перше число:"));
let c = prompt('Калькулятор -' + "Арефметична операція: +, -, *, /");
let b = parseInt(prompt('Калькулятор -' + "Друге число:"));

function summ(a, b) {
  if (Number.isNaN(a && b)) {
    return error();
  } else {
    return a + b;
  }
}

function diff(a, b) {
  if (Number.isNaN(a && b)) {
    return error();
  } else {
    return a - b;
  }
}

function mult(a, b) {
  if (Number.isNaN(a && b)) {
    return error();
  } else {
    return a * b;
  }
}

function dev(a, b) {
  if (Number.isNaN(a && b)) {
    return error();
  } else if (b === 0) {
    return error();
  }
  return a / b;
}

function error() {
  let a = "Помилка";
  return a;
}

function res(callback) {
  let result = callback(a, b);
  document.write(`<h3> ${result} </h3>`);
}

switch (c) {
  case "+":
    res(summ);
    break;
  case "-":
    res(diff);
    break;
  case "*":
    res(mult);
    break;
  case "/":
    res(dev);
    break;
  default:
    res(error);
}

document.write("<hr>");

//===============================================================================

// 7. Функція ggg приймає 2 параметри: анонімну функцію, яка повертає 3 та анонімну функцію, яка повертає 4. Поверніть результатом функції ggg суму 3 та 4.

//===============================================================================

a = (function () {
  return 3;
})();

b = (function () {
  return 4;
})();

function bbb(a, b) {
  document.write(`<h3>${a + b}</h3>`);
}
bbb(a, b);

document.write("<hr>");

//===============================================================================

// 8. Зробіть функцію, яка рахує та виводить кількість своїх викликів.

//===============================================================================

i = 0;
function sum() {
  i++;
  if (i === 1000) return;
  sum();
}
sum();
document.write(`<h3>${i}</h3>`);

document.write("<hr>");

//===============================================================================
